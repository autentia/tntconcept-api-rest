openapi: 3.0.1
info:
  title: Rest API TNT
  description: Independent API Rest for TNTConcept
  version: '0.5'
  termsOfService: 'https://github.com/autentia/tntconcept-api-rest/blob/master/LICENSE.txt'
  contact:
    name: Autentia
    url: 'https://www.autentia.com/'
  license:
    name: GNU General Public License v3.0
    url: 'https://www.gnu.org/licenses/gpl-3.0.en.html'
servers:
  - url: 'http://localhost:8080/api/'
paths:
  /activitiesByDates:
    get:
      tags:
        - Activities
      summary: Imputations between two dates inclusive
      description: ''
      operationId: getActivitiesByDates
      parameters:
        - name: startDate
          in: query
          description: The start date
          schema:
            $ref: '#/components/schemas/date-string'
          example: '2018-04-17T00:00:00'
        - name: endDate
          in: query
          description: The end date
          schema:
            $ref: '#/components/schemas/date-string'
          example: '2018-04-18T00:00:00'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityByDay'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /activitiesByDay:
    get:
      tags:
        - Activities
      summary: Imputations on a specific day
      description: >-
        Returns all the imputations of a user on that day of the ActivitiesDay
        object
      operationId: getActivitiesByDay
      parameters:
        - name: date
          in: query
          description: ''
          schema:
            $ref: '#/components/schemas/date-string'
          example: '2018-04-17T00:00:00'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityByDay'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  '/activity/{activityId}':
    get:
      tags:
        - Activities
      summary: Get imputation by id
      description: ''
      operationId: getActivityById
      parameters:
        - name: activityId
          in: path
          required: true
          description: The id that needs to be fetched.
          schema:
            $ref: '#/components/schemas/id'
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    delete:
      tags:
        - Activities
      summary: Deletes an activity
      description: ''
      operationId: deleteActivity
      parameters:
        - name: activityId
          in: path
          description: Activity id to delete.
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: '1'
      responses:
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /activity:
    post:
      tags:
        - Activities
      summary: Add a new activity
      description: ''
      operationId: addActivity
      requestBody:
        description: Activity object that needs to be added to the database.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '405':
          description: Invalid Input
    put:
      tags:
        - Activities
      summary: Update an existing activity
      description: ''
      operationId: editActivity
      requestBody:
        description: Activity object that needs to be added to the database.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        '400':
          description: Invalid ID supplied
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Activity not found
  /organizations:
    get:
      tags:
        - Organizations
      summary: Returns all organizations
      description: >-
        Each organization contains a list of projects, and each project a list
        of roles
      operationId: getOrganizations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/id'
                  name:
                    type: string
                    example: Nuestra Empresa
                  projects:
                    $ref: '#/components/schemas/Project'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  '/project/{projectId}':
    get:
      tags:
        - Projects
      summary: Get project by project id
      description: ''
      operationId: getProjectById
      parameters:
        - name: projectId
          in: path
          description: The id that needs to be fetched.
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: '1'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  '/projectRole/{projectRoleId}':
    get:
      tags:
        - ProjectRole
      summary: Get role by project role id
      description: ''
      operationId: getProjectRoleById
      parameters:
        - name: projectRoleId
          in: path
          description: The id that needs to be fetched.
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: '1'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRole'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
components:
  schemas:
    date-string:
      type: string
      format: date-time
    id:
      type: integer
      format: int32
      example: 1
    ProjectRole:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        name:
          type: string
          example: Vacaciones
        ProjectId:
          $ref: '#/components/schemas/id'
    Project:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        name:
          type: string
          example: Vacaciones
        open:
          type: boolean
          example: true
        organizationId:
          $ref: '#/components/schemas/id'
        projectRoles:
          type: array
          items:
            $ref: '#/components/schemas/ProjectRole'
    Activity:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        startDate:
          type: integer
          format: int32
          example: 1517472000000
        duration:
          type: integer
          format: int32
          example: 360
        description:
          type: string
          example: Prueba
        userId:
          $ref: '#/components/schemas/id'
        roleId:
          $ref: '#/components/schemas/id'
        billable:
          type: boolean
          example: true
    ActivityByDay:
      type: object
      properties:
        date:
          type: integer
          format: int32
          example: 151804440000
        total_hours:
          type: integer
          format: int32
          example: 3
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
security:
  - basicAuth: []
externalDocs:
  description: API Documentation
  url: 'https://github.com/autentia/tntconcept-api-rest/'
